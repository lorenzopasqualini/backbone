/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/QK4s0aXHl9v
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Manrope } from 'next/font/google'

manrope({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
import { Button } from "@/components/ui/button"
import { Separator } from "@/components/ui/separator"

export function Design() {
  return (
    <div className="flex h-screen w-full">
      <div className="bg-gray-100 dark:bg-gray-900 w-124 p-6 flex-col gap-6 hidden md:flex">
        <div className="flex items-center gap-2">
          <ScissorsIcon className="h-6 w-6 text-[#ff0000] dark:text-[#ff0000]" />
          <h2 className="text-lg font-semibold">Backbone Design</h2>
        </div>
        <div className="flex flex-col gap-2">
          <h3 className="text-sm font-medium text-gray-500 dark:text-gray-400">Templates</h3>
          <div className="grid grid-cols-2 gap-2">
            <Button
              className="justify-start gap-2 text-left text-gray-900 dark:text-gray-50 hover:bg-[#fce7e7] transition-colors"
              variant="ghost"
            >
              <ShirtIcon className="h-5 w-5 text-[#ff0000] dark:text-[#ff0000] transition-colors" />
              <span className="truncate text-gray-900 dark:text-gray-50 transition-colors">T-Shirt</span>
            </Button>
            <Button
              className="justify-start gap-2 text-left text-gray-900 dark:text-gray-50 hover:bg-[#fce7e7] transition-colors"
              variant="ghost"
            >
              <ShirtIcon className="h-5 w-5 text-[#ff0000] dark:text-[#ff0000] transition-colors" />
              <span className="truncate text-gray-900 dark:text-gray-50 transition-colors">Hoodie</span>
            </Button>
            <Button
              className="justify-start gap-2 text-left text-gray-900 dark:text-gray-50 hover:bg-[#fce7e7] transition-colors"
              variant="ghost"
            >
              <ShirtIcon className="h-5 w-5 text-[#ff0000] dark:text-[#ff0000] transition-colors" />
              <span className="truncate text-gray-900 dark:text-gray-50 transition-colors">Dress</span>
            </Button>
            <Button
              className="justify-start gap-2 text-left text-gray-900 dark:text-gray-50 hover:bg-[#fce7e7] transition-colors"
              variant="ghost"
            >
              <PenIcon className="h-5 w-5 text-[#ff0000] dark:text-[#ff0000] transition-colors" />
              <span className="truncate text-gray-900 dark:text-gray-50 transition-colors">Pants</span>
            </Button>
          </div>
        </div>
        <div className="flex flex-col gap-2">
          <h3 className="text-sm font-medium text-gray-500 dark:text-gray-400">Patterns</h3>
          <div className="grid grid-cols-2 gap-2">
            <Button
              className="justify-start gap-2 text-left text-gray-900 dark:text-gray-50 hover:bg-[#fce7e7] transition-colors"
              variant="ghost"
            >
              <FlagIcon className="h-5 w-5 text-[#ff0000] dark:text-[#ff0000] transition-colors" />
              <span className="truncate text-gray-900 dark:text-gray-50 transition-colors">Stripes</span>
            </Button>
            <Button
              className="justify-start gap-2 text-left text-gray-900 dark:text-gray-50 hover:bg-[#fce7e7] transition-colors"
              variant="ghost"
            >
              <DotIcon className="h-5 w-5 text-[#ff0000] dark:text-[#ff0000] transition-colors" />
              <span className="truncate text-gray-900 dark:text-gray-50 transition-colors">Polka Dots</span>
            </Button>
            <Button
              className="justify-start gap-2 text-left text-gray-900 dark:text-gray-50 hover:bg-[#fce7e7] transition-colors"
              variant="ghost"
            >
              <FlowerIcon className="h-5 w-5 text-[#ff0000] dark:text-[#ff0000] transition-colors" />
              <span className="truncate text-gray-900 dark:text-gray-50 transition-colors">Floral</span>
            </Button>
            <Button
              className="justify-start gap-2 text-left text-gray-900 dark:text-gray-50 hover:bg-[#fce7e7] transition-colors"
              variant="ghost"
            >
              <PlugIcon className="h-5 w-5 text-[#ff0000] dark:text-[#ff0000] transition-colors" />
              <span className="truncate text-gray-900 dark:text-gray-50 transition-colors">Plaid</span>
            </Button>
          </div>
        </div>
        <div className="flex flex-col gap-2">
          <h3 className="text-sm font-medium text-gray-500 dark:text-gray-400">Graphics</h3>
          <div className="grid grid-cols-2 gap-2">
            <Button
              className="justify-start gap-2 text-left text-gray-900 dark:text-gray-50 hover:bg-[#fce7e7] transition-colors"
              variant="ghost"
            >
              <LogInIcon className="h-5 w-5 text-[#ff0000] dark:text-[#ff0000] transition-colors" />
              <span className="truncate text-gray-900 dark:text-gray-50 transition-colors">Logo</span>
            </Button>
            <Button
              className="justify-start gap-2 text-left text-gray-900 dark:text-gray-50 hover:bg-[#fce7e7] transition-colors"
              variant="ghost"
            >
              <ImageIcon className="h-5 w-5 text-[#ff0000] dark:text-[#ff0000] transition-colors" />
              <span className="truncate text-gray-900 dark:text-gray-50 transition-colors">Illustration</span>
            </Button>
            <Button
              className="justify-start gap-2 text-left text-gray-900 dark:text-gray-50 hover:bg-[#fce7e7] transition-colors"
              variant="ghost"
            >
              <ImageIcon className="h-5 w-5 text-[#ff0000] dark:text-[#ff0000] transition-colors" />
              <span className="truncate text-gray-900 dark:text-gray-50 transition-colors">Icon</span>
            </Button>
            <Button
              className="justify-start gap-2 text-left text-gray-900 dark:text-gray-50 hover:bg-[#fce7e7] transition-colors"
              variant="ghost"
            >
              <TextIcon className="h-5 w-5 text-[#ff0000] dark:text-[#ff0000] transition-colors" />
              <span className="truncate text-gray-900 dark:text-gray-50 transition-colors">Text</span>
            </Button>
          </div>
        </div>
      </div>
      <div className="flex-1 bg-gray-50 dark:bg-gray-950 p-6 flex flex-col gap-6">
        <div className="flex items-center justify-between">
          <div className="flex items-center gap-2">
            <Button className="rounded-full" size="icon" variant="ghost">
              <UndoIcon className="h-5 w-5 text-gray-900 dark:text-gray-50" />
            </Button>
            <Button className="rounded-full" size="icon" variant="ghost">
              <RedoIcon className="h-5 w-5 text-gray-900 dark:text-gray-50" />
            </Button>
            <Separator className="h-6 bg-gray-200 dark:bg-gray-800" orientation="vertical" />
            <Button className="rounded-full" size="icon" variant="ghost">
              <ZoomInIcon className="h-5 w-5 text-gray-900 dark:text-gray-50" />
            </Button>
            <Button className="rounded-full" size="icon" variant="ghost">
              <ZoomOutIcon className="h-5 w-5 text-gray-900 dark:text-gray-50" />
            </Button>
          </div>
          <div className="flex items-center gap-2">
            <Button className="rounded-full" size="icon" variant="ghost">
              <LayersIcon className="h-5 w-5 text-gray-900 dark:text-gray-50" />
            </Button>
            <Button className="rounded-full" size="icon" variant="ghost">
              <PaletteIcon className="h-5 w-5 text-gray-900 dark:text-gray-50" />
            </Button>
            <Button className="rounded-full" size="icon" variant="ghost">
              <TypeIcon className="h-5 w-5 text-gray-900 dark:text-gray-50" />
            </Button>
          </div>
        </div>
        <div className="flex-1 bg-white dark:bg-gray-900 rounded-lg shadow-lg overflow-hidden relative">
          <div className="absolute inset-0 grid place-items-center text-gray-300 dark:text-gray-600 text-4xl font-bold">
            Drop your apparel assets here
          </div>
        </div>
      </div>
    </div>
  )
}

function DotIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <circle cx="12.1" cy="12.1" r="1" />
    </svg>
  )
}


function FlagIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M4 15s1-1 4-1 5 2 8 2 4-1 4-1V3s-1 1-4 1-5-2-8-2-4 1-4 1z" />
      <line x1="4" x2="4" y1="22" y2="15" />
    </svg>
  )
}


function FlowerIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <circle cx="12" cy="12" r="3" />
      <path d="M12 16.5A4.5 4.5 0 1 1 7.5 12 4.5 4.5 0 1 1 12 7.5a4.5 4.5 0 1 1 4.5 4.5 4.5 4.5 0 1 1-4.5 4.5" />
      <path d="M12 7.5V9" />
      <path d="M7.5 12H9" />
      <path d="M16.5 12H15" />
      <path d="M12 16.5V15" />
      <path d="m8 8 1.88 1.88" />
      <path d="M14.12 9.88 16 8" />
      <path d="m8 16 1.88-1.88" />
      <path d="M14.12 14.12 16 16" />
    </svg>
  )
}


function ImageIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <rect width="18" height="18" x="3" y="3" rx="2" ry="2" />
      <circle cx="9" cy="9" r="2" />
      <path d="m21 15-3.086-3.086a2 2 0 0 0-2.828 0L6 21" />
    </svg>
  )
}


function LayersIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="m12.83 2.18a2 2 0 0 0-1.66 0L2.6 6.08a1 1 0 0 0 0 1.83l8.58 3.91a2 2 0 0 0 1.66 0l8.58-3.9a1 1 0 0 0 0-1.83Z" />
      <path d="m22 17.65-9.17 4.16a2 2 0 0 1-1.66 0L2 17.65" />
      <path d="m22 12.65-9.17 4.16a2 2 0 0 1-1.66 0L2 12.65" />
    </svg>
  )
}


function LogInIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M15 3h4a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-4" />
      <polyline points="10 17 15 12 10 7" />
      <line x1="15" x2="3" y1="12" y2="12" />
    </svg>
  )
}


function PaletteIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <circle cx="13.5" cy="6.5" r=".5" fill="currentColor" />
      <circle cx="17.5" cy="10.5" r=".5" fill="currentColor" />
      <circle cx="8.5" cy="7.5" r=".5" fill="currentColor" />
      <circle cx="6.5" cy="12.5" r=".5" fill="currentColor" />
      <path d="M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10c.926 0 1.648-.746 1.648-1.688 0-.437-.18-.835-.437-1.125-.29-.289-.438-.652-.438-1.125a1.64 1.64 0 0 1 1.668-1.668h1.996c3.051 0 5.555-2.503 5.555-5.554C21.965 6.012 17.461 2 12 2z" />
    </svg>
  )
}


function PenIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M17 3a2.85 2.83 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5Z" />
    </svg>
  )
}


function PlugIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M12 22v-5" />
      <path d="M9 8V2" />
      <path d="M15 8V2" />
      <path d="M18 8v5a4 4 0 0 1-4 4h-4a4 4 0 0 1-4-4V8Z" />
    </svg>
  )
}


function RedoIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M21 7v6h-6" />
      <path d="M3 17a9 9 0 0 1 9-9 9 9 0 0 1 6 2.3l3 2.7" />
    </svg>
  )
}


function ScissorsIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <circle cx="6" cy="6" r="3" />
      <path d="M8.12 8.12 12 12" />
      <path d="M20 4 8.12 15.88" />
      <circle cx="6" cy="18" r="3" />
      <path d="M14.8 14.8 20 20" />
    </svg>
  )
}


function ShirtIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M20.38 3.46 16 2a4 4 0 0 1-8 0L3.62 3.46a2 2 0 0 0-1.34 2.23l.58 3.47a1 1 0 0 0 .99.84H6v10c0 1.1.9 2 2 2h8a2 2 0 0 0 2-2V10h2.15a1 1 0 0 0 .99-.84l.58-3.47a2 2 0 0 0-1.34-2.23z" />
    </svg>
  )
}


function TextIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M17 6.1H3" />
      <path d="M21 12.1H3" />
      <path d="M15.1 18H3" />
    </svg>
  )
}


function TypeIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <polyline points="4 7 4 4 20 4 20 7" />
      <line x1="9" x2="15" y1="20" y2="20" />
      <line x1="12" x2="12" y1="4" y2="20" />
    </svg>
  )
}


function UndoIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M3 7v6h6" />
      <path d="M21 17a9 9 0 0 0-9-9 9 9 0 0 0-6 2.3L3 13" />
    </svg>
  )
}


function ZoomInIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <circle cx="11" cy="11" r="8" />
      <line x1="21" x2="16.65" y1="21" y2="16.65" />
      <line x1="11" x2="11" y1="8" y2="14" />
      <line x1="8" x2="14" y1="11" y2="11" />
    </svg>
  )
}


function ZoomOutIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <circle cx="11" cy="11" r="8" />
      <line x1="21" x2="16.65" y1="21" y2="16.65" />
      <line x1="8" x2="14" y1="11" y2="11" />
    </svg>
  )
}
